version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: defaultdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 3s

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
      timeout: 3s

  db_init:
    image: postgres:15
    container_name: db_init
    depends_on:
      - postgres
    volumes:
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
    networks:
      - app-network
    entrypoint: ["sh", "-c", "/docker-entrypoint-initdb.d/init-db.sh"]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: express_backend
    restart: always
    depends_on:
      db_init:
        condition: service_started
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgres://postgres:mypassword@postgres_db:5432/llm_eval_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
    command: ["node", "src/server.js"]
    env_file:
      - ./backend/.env
    networks:
      - app-network
    volumes:
      - uploads_data:/app/uploads

  prompt_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    restart: always
    depends_on:
      db_init:
        condition: service_started
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:mypassword@postgres_db:5432/llm_eval_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
    command: ["node", "src/workers/promptWorker.js"]
    env_file:
      - ./backend/.env
    networks:
      - app-network

  template_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    restart: always
    depends_on:
      db_init:
        condition: service_started
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:mypassword@postgres_db:5432/llm_eval_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
    command: ["node", "src/workers/templateWorker.js"]
    env_file:
      - ./backend/.env
    networks:
      - app-network
  
  evaluation_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    restart: always
    depends_on:
      db_init:
        condition: service_started
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:mypassword@postgres_db:5432/llm_eval_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
    command: ["node", "src/workers/evaluationWorker.js"]
    env_file:
      - ./backend/.env
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: react_frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "5173:80"
    networks:
      - app-network

volumes:
  postgres_data:
  uploads_data:

networks:
  app-network:
